package me.jonakls.simplecontacts.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import me.jonakls.simplecontacts.SimpleContacts;
import me.jonakls.simplecontacts.api.ContactUser;
import me.jonakls.simplecontacts.service.AccountsService;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Arrays;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class RegisterForm extends JDialog {
    private JPanel registerPane;
    private JPanel imagePanel;
    private JLabel imageIcon;
    private JLabel titleLabel;
    private JPanel contentPane;
    private JLabel loginTitle;
    private JTextField inputUser;
    private JPasswordField inputPassword;
    private JButton registerButton;
    private JButton loginButton;
    private JTextField inputName;
    private JTextField inputSecondName;
    private JTextField inputPhone;
    private JTextField inputMail;

    public RegisterForm(JFrame parent) {
        super(parent);
        setContentPane(registerPane);
        setTitle("SimpleContact | Registrarse");
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setSize(1000, 600);
        setLocationRelativeTo(null);
        setVisible(true);
        toLoginForm();
        onRegisterUser();
    }

    private void toLoginForm() {
        loginButton.addActionListener(e -> {
            dispose();
            new LoginForm(null);
        });
    }

    private void onRegisterUser() {
        final Pattern pattern = Pattern.compile("^[a-zA-Z0-9]*$");

        registerButton.addActionListener(e -> {
            Matcher matcher = pattern.matcher(inputUser.getText());

            if (matcher.find()) {
                inputUser.setText("");
                JOptionPane.showMessageDialog(null, "El usuario no puede contener caracteres especiales");
            }
        });


        registerButton.addActionListener(e -> {
            if (!validateForm()) return;
            JOptionPane.showMessageDialog(null, "Registro exitoso");
            dispose();
            AccountsService accountsService = SimpleContacts.getAccountsService();
            ContactUser contactUser = new ContactUser(inputUser.getText().trim());
            contactUser.setName(inputName.getText());
            contactUser.setSecondName(inputSecondName.getText());
            contactUser.setEmail(inputMail.getText());
            contactUser.setPhone(inputPhone.getText());
            contactUser.setPassword(Arrays.toString(inputPassword.getPassword()));
            accountsService.saveAccount(contactUser);
            new LoginForm(null);
        });
    }

    private boolean validateForm() {
        if (inputUser.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El usuario no puede estar vacio");
            return false;
        }

        if (inputPassword.getPassword().length == 0) {
            JOptionPane.showMessageDialog(null, "La contraseÃ±a no puede estar vacia");
            return false;
        }

        if (inputName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El nombre no puede estar vacio");
            return false;
        }

        if (inputSecondName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El apellido no puede estar vacio");
            return false;
        }

        if (inputPhone.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El telefono no puede estar vacio");
            return false;
        }

        return true;
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        registerPane = new JPanel();
        registerPane.setLayout(new GridLayoutManager(2, 5, new Insets(0, 0, 0, 0), -1, -1));
        registerPane.setBackground(new Color(-11374081));
        imagePanel = new JPanel();
        imagePanel.setLayout(new GridLayoutManager(4, 3, new Insets(0, 0, 0, 0), -1, -1));
        imagePanel.setBackground(new Color(-11374081));
        registerPane.add(imagePanel, new GridConstraints(0, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        imageIcon = new JLabel();
        imageIcon.setIcon(new ImageIcon(getClass().getResource("/assets/logo.png")));
        imageIcon.setText("");
        imagePanel.add(imageIcon, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        imagePanel.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        imagePanel.add(spacer2, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        titleLabel = new JLabel();
        Font titleLabelFont = this.$$$getFont$$$("Tahoma", Font.BOLD, 24, titleLabel.getFont());
        if (titleLabelFont != null) titleLabel.setFont(titleLabelFont);
        titleLabel.setForeground(new Color(-1));
        titleLabel.setText("SimpleContact");
        imagePanel.add(titleLabel, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        imagePanel.add(spacer3, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        imagePanel.add(spacer4, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        registerPane.add(spacer5, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(13, 2, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.setBackground(new Color(-1));
        registerPane.add(contentPane, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        loginTitle = new JLabel();
        Font loginTitleFont = this.$$$getFont$$$("Tahoma", Font.BOLD, 24, loginTitle.getFont());
        if (loginTitleFont != null) loginTitle.setFont(loginTitleFont);
        loginTitle.setForeground(new Color(-16758099));
        loginTitle.setText("Registrarse");
        contentPane.add(loginTitle, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        contentPane.add(spacer6, new GridConstraints(12, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer7 = new Spacer();
        contentPane.add(spacer7, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setBackground(new Color(-16777216));
        Font label1Font = this.$$$getFont$$$("Tahoma", -1, 14, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-16777216));
        label1.setText("Recuerda que tu usuario tiene que ser sin simbolos o espacios");
        contentPane.add(label1, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setBackground(new Color(-16777216));
        Font label2Font = this.$$$getFont$$$("Tahoma", Font.BOLD, 24, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setForeground(new Color(-16758099));
        label2.setRequestFocusEnabled(false);
        label2.setText("Usuario: ");
        contentPane.add(label2, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        inputUser = new JTextField();
        inputUser.setBackground(new Color(-1181953));
        inputUser.setCaretColor(new Color(-11374081));
        inputUser.setColumns(20);
        Font inputUserFont = this.$$$getFont$$$("Tahoma", -1, 18, inputUser.getFont());
        if (inputUserFont != null) inputUser.setFont(inputUserFont);
        inputUser.setForeground(new Color(-16777216));
        contentPane.add(inputUser, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$("Tahoma", Font.BOLD, 24, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setForeground(new Color(-16758099));
        label3.setName("");
        label3.setText("Clave: ");
        contentPane.add(label3, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        inputPassword = new JPasswordField();
        inputPassword.setBackground(new Color(-1181953));
        inputPassword.setColumns(20);
        inputPassword.setEchoChar('*');
        Font inputPasswordFont = this.$$$getFont$$$("Tahoma", -1, 18, inputPassword.getFont());
        if (inputPasswordFont != null) inputPassword.setFont(inputPasswordFont);
        inputPassword.setForeground(new Color(-16777216));
        contentPane.add(inputPassword, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        registerButton = new JButton();
        registerButton.setBackground(new Color(-11374081));
        Font registerButtonFont = this.$$$getFont$$$("Tahoma", Font.BOLD, 18, registerButton.getFont());
        if (registerButtonFont != null) registerButton.setFont(registerButtonFont);
        registerButton.setForeground(new Color(-1));
        registerButton.setText("Registrarse");
        contentPane.add(registerButton, new GridConstraints(10, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        loginButton = new JButton();
        loginButton.setBackground(new Color(-11374081));
        Font loginButtonFont = this.$$$getFont$$$("Tahoma", Font.BOLD, 18, loginButton.getFont());
        if (loginButtonFont != null) loginButton.setFont(loginButtonFont);
        loginButton.setForeground(new Color(-1));
        loginButton.setText("Iniciar SesiÃ³n");
        contentPane.add(loginButton, new GridConstraints(11, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer8 = new Spacer();
        contentPane.add(spacer8, new GridConstraints(9, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        Font label4Font = this.$$$getFont$$$("Tahoma", Font.BOLD, 24, label4.getFont());
        if (label4Font != null) label4.setFont(label4Font);
        label4.setForeground(new Color(-16758099));
        label4.setName("");
        label4.setText("Nombre: ");
        contentPane.add(label4, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        inputName = new JTextField();
        inputName.setBackground(new Color(-1181953));
        inputName.setCaretColor(new Color(-11374081));
        inputName.setColumns(20);
        Font inputNameFont = this.$$$getFont$$$("Tahoma", -1, 18, inputName.getFont());
        if (inputNameFont != null) inputName.setFont(inputNameFont);
        inputName.setForeground(new Color(-16777216));
        inputName.setText("");
        contentPane.add(inputName, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label5 = new JLabel();
        Font label5Font = this.$$$getFont$$$("Tahoma", Font.BOLD, 24, label5.getFont());
        if (label5Font != null) label5.setFont(label5Font);
        label5.setForeground(new Color(-16758099));
        label5.setName("");
        label5.setText("Apellido: ");
        contentPane.add(label5, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        inputSecondName = new JTextField();
        inputSecondName.setBackground(new Color(-1181953));
        inputSecondName.setCaretColor(new Color(-11374081));
        inputSecondName.setColumns(20);
        Font inputSecondNameFont = this.$$$getFont$$$("Tahoma", -1, 18, inputSecondName.getFont());
        if (inputSecondNameFont != null) inputSecondName.setFont(inputSecondNameFont);
        inputSecondName.setForeground(new Color(-16777216));
        inputSecondName.setText("");
        contentPane.add(inputSecondName, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label6 = new JLabel();
        Font label6Font = this.$$$getFont$$$("Tahoma", Font.BOLD, 24, label6.getFont());
        if (label6Font != null) label6.setFont(label6Font);
        label6.setForeground(new Color(-16758099));
        label6.setName("");
        label6.setText("Numero: ");
        contentPane.add(label6, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        inputPhone = new JTextField();
        inputPhone.setBackground(new Color(-1181953));
        inputPhone.setCaretColor(new Color(-11374081));
        inputPhone.setColumns(20);
        Font inputPhoneFont = this.$$$getFont$$$("Tahoma", -1, 18, inputPhone.getFont());
        if (inputPhoneFont != null) inputPhone.setFont(inputPhoneFont);
        inputPhone.setForeground(new Color(-16777216));
        inputPhone.setText("");
        contentPane.add(inputPhone, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label7 = new JLabel();
        Font label7Font = this.$$$getFont$$$("Tahoma", Font.BOLD, 24, label7.getFont());
        if (label7Font != null) label7.setFont(label7Font);
        label7.setForeground(new Color(-16758099));
        label7.setName("");
        label7.setText("Correo: ");
        contentPane.add(label7, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        inputMail = new JTextField();
        inputMail.setBackground(new Color(-1181953));
        inputMail.setCaretColor(new Color(-11374081));
        inputMail.setColumns(20);
        Font inputMailFont = this.$$$getFont$$$("Tahoma", -1, 18, inputMail.getFont());
        if (inputMailFont != null) inputMail.setFont(inputMailFont);
        inputMail.setForeground(new Color(-16777216));
        inputMail.setText("");
        contentPane.add(inputMail, new GridConstraints(8, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer9 = new Spacer();
        registerPane.add(spacer9, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer10 = new Spacer();
        registerPane.add(spacer10, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer11 = new Spacer();
        registerPane.add(spacer11, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return registerPane;
    }

}
